'''
Ex1
–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–ø–∞–∫–æ–≤–æ–∫.
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print_given, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
–±—É–¥–µ—Ç —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ —Ç–∞–∫–æ–≤–æ–µ –∏–º–µ–µ—Ç—Å—è),
–∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
–ê—Ä–≥—É–º–µ–Ω—Ç—ã –±–µ–∑ –∏–º–µ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞—Å–ø–µ—á–∞—Ç–∞–Ω—ã —Ä–∞–Ω—å—à–µ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö.
–ü–æ—Ä—è–¥–æ–∫ –ø–µ—á–∞—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑ –∏–º–µ–Ω–∏ –≤–∞–∂–µ–Ω: –æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø–æ—Ä—è–¥–∫–æ–º,
–≤ –∫–æ—Ç–æ—Ä–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è. –ü–æ—Ä—è–¥–æ–∫ –ø–µ—á–∞—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å –∏–º–µ–Ω–µ–º –Ω–µ–≤–∞–∂–µ–Ω.
–ü—Ä–∏–º–µ—Ä:
print_given(1, 2, 3, [1, 2, 3], 'one', 'two', 'three', two = 2, one = 1, three = 3)
>>> 1 <class 'int'>
2 <class 'int'>
3 <class 'int'>
[1, 2, 3] <class 'list'>
one <class 'str'>
two <class 'str'>
three <class 'str'>
one 1 <class 'int'>
two 2 <class 'int'>
three 3 <class 'int'>
print_given()
'''
def print_given(*args,two,one,three):
    for i in args:
        print(i,type(i))
print_given(1, 2, 3, [1, 2, 3], 'one', 'two', 'three', two = 2, one = 1, three = 3)





'''
Ex2
–ï—Å–ª–∏ –≤—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–∞–Ω—å—à–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ sorted, 
—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤–æ—Ç —ç—Ç–æ—Ç python-howto(https://docs.python.org/3/howto/sorting.html) 
(—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø—Ä–æ —ç—Ç–æ, –¥–∞ –∏ –≤–æ–æ–±—â–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –ø–æ–ª–µ–∑–Ω–∞—è).
–ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–Ω–µ –±–æ–ª—å—à–µ —Å–æ—Ç–Ω–∏) —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª (–∫–∞–∂–¥–æ–µ –Ω–µ –º–µ–Ω—å—à–µ 0 –∏ –Ω–µ –±–æ–ª—å—à–µ 19).
–í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ –ø–æ—Ä—è–¥–∫–µ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —ç—Ç–∏—Ö —á–∏—Å–µ–ª –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.
–¢.–µ., —Å–∫–∞–∂–µ–º —á–∏—Å–ª–∞ 1, 2, 3 –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –ø–æ—Ä—è–¥–∫–µ 1, 3, 2, 
–ø–æ—Å–∫–æ–ª—å–∫—É —Å–ª–æ–≤–æ two –≤ —Å–ª–æ–≤–∞—Ä–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –ø–æ–∑–∂–µ —Å–ª–æ–≤–∞ three, 
–∞ —Å–ª–æ–≤–æ three -- –ø–æ–∑–∂–µ —Å–ª–æ–≤–∞ one (–∏–Ω–∞—á–µ –≥–æ–≤–æ—Ä—è, –ø–æ—Å–∫–æ–ª—å–∫—É –≤—ã—Ä–∞–∂–µ–Ω–∏–µ 'one' < 'three' < 'two' —è–≤–ª—è–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω—ã–º)
–ü—Ä–∏–º–µ—Ä:
Sample Input:
0 1 1 2 3 5 8 13
Sample Output:
8 5 1 1 13 3 2 0
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
number_names = {
        0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine',
        10: 'ten', 11: 'eleven', 12: 'twelve', 
        13: 'thirteen', 14: 'fourteen', 15: 'fifteen', 16: 'sixteen', 17: 'seventeen',  18: 'eighteen', 19: 'nineteen'}
'''
number_names = {
        0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine',
        10: 'ten', 11: 'eleven', 12: 'twelve',
        13: 'thirteen', 14: 'fourteen', 15: 'fifteen', 16: 'sixteen', 17: 'seventeen',  18: 'eighteen', 19: 'nineteen'
                }

lst = [0,1,1,2,3,5,8,13]
print (lst)
keys = number_names.keys()
A = sorted (lst, key = lambda x : number_names[x])
print (A)









'''
Ex3
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é composition(f, g), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏: f –∏ g, -- –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏—é.
–ù–µ –≤–¥–∞–≤–∞—è—Å—å –≤ –ª–∏—à–Ω–∏–µ —Å–µ–π—á–∞—Å –¥–µ—Ç–∞–ª–∏,  –Ω–∞–∑–æ–≤—ë–º –∫–æ–º–ø–æ–∑–∏—Ü–∏–µ–π ùëì‚àòùëî –¥–≤—É—Ö –∑–∞–¥–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π ùëì, ùëî —Ñ—É–Ω–∫—Ü–∏—é ‚Ñé, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π
  ‚Ñé(ùë•)=ùëì(ùëî(ùë•))
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —É —Ñ—É–Ω–∫—Ü–∏–∏ g –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞–∫–∏–µ —É–≥–æ–¥–Ω–æ, 
–∏ –ª—é–±–æ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ —Ñ—É–Ω–∫—Ü–∏–µ–π g –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ f.
–ü—Ä–∏–º–µ—Ä—ã:
h = composition(lambda x: x**2, lambda x: x + 1)
print(h(5))
>>> 36
h = composition(lambda x: x, composition(lambda x: x**2, lambda x: x + 1))
print(h(5))
>>> 36
h = composition(sum, lambda x, y, z: (x**2, y**3, z**4))
print(h(2, 3, 9))
>>> 6592
'''
def g(*args):
    return args
def f(*args):
    return args*2

# def composition(f,g):
#     return
print(g(1))








'''
Ex4
–ù–∞–ø–∏—à–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä flip, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç —Ç–∞–∫, —á—Ç–æ –∑–∞–¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è 
–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å–µ —Å–≤–æ–∏ –Ω–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ, –æ–±—Ä–∞—Ç–Ω–æ–º —Ç–æ–º—É, 
–≤ –∫–æ—Ç–æ—Ä–æ–º –∏—Ö –ø–µ—Ä–µ–¥–∞–ª–∏ (–¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å –∏–º–µ–Ω–µ–º –Ω–µ –≤–ø–æ–ª–Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∏ –±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã)
–ü—Ä–∏–º–µ—Ä:
@flip
def div(x, y, show=False):
    res = x / y
    if show:
        print(res)
    return res

div(2, 4, show=True)
>>> 2.0
'''










'''
Ex5
–ù–∞–ø–∏—à–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä introduce_on_debug, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç —Ç–∞–∫, —á—Ç–æ –∑–∞–¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç —Å–≤–æ—ë –∏–º—è 
–ø—Ä–∏ –≤—ã–∑–æ–≤–µ, –Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ debug –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True.
–ü—Ä–∏–º–µ—Ä:
@introduce_on_debug
def identity(x):
    return x

# debug == False
identity(239)
>>> 239
# debug == True
identity(57)
>>> identity
57
'''

@introduce_on_debug
def identity(x):
    if debug==True:
        print(x)
    return x

debug == False
identity(239)
debug == True